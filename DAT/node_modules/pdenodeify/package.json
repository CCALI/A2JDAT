{
  "_args": [
    [
      {
        "raw": "pdenodeify@https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
        "scope": null,
        "escapedName": "pdenodeify",
        "name": "pdenodeify",
        "rawSpec": "https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
        "spec": "https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
        "type": "remote"
      },
      "/Users/tobias/iit/azure/DAT/StandaloneDAT"
    ]
  ],
  "_from": "pdenodeify@>=0.1.0 <0.2.0",
  "_id": "pdenodeify@0.1.0",
  "_inCache": true,
  "_location": "/pdenodeify",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pdenodeify@https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
    "scope": null,
    "escapedName": "pdenodeify",
    "name": "pdenodeify",
    "rawSpec": "https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
    "spec": "https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/steal-bundler",
    "/steal-tools"
  ],
  "_resolved": "https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
  "_shasum": "a9b89231cd8f789645868aaf901f999f8fc6e010",
  "_shrinkwrap": null,
  "_spec": "pdenodeify@https://registry.npmjs.org/pdenodeify/-/pdenodeify-0.1.0.tgz",
  "_where": "/Users/tobias/iit/azure/DAT/StandaloneDAT",
  "author": {
    "name": "Matthew Phillips"
  },
  "dependencies": {},
  "description": "A denodeify that doesn't suck",
  "devDependencies": {
    "es6-promise": "^2.0.0",
    "mocha": "^1.21.4"
  },
  "license": "MIT",
  "main": "lib/main.js",
  "name": "pdenodeify",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/matthewp/pdenodeify.svg?branch=master)](https://travis-ci.org/matthewp/pdenodeify)\n\n# pdenodeify\n\nDead simple `denodeify` function for Promises. Supports native promises, when they come to Node and/or the browser, falling back to [es6-promise](https://github.com/jakearchibald/es6-promise) if the global isn't available. Since the polyfill is optional you'll need to include it yourself (in Node just make sure it's installed).\n\n# Example\n\n```js\nvar denodeify = require('pdenodeify');\nvar readFile = denodeify(require('fs').readFile);\n\nreadFile('path/to/file').then(function(data) {\n  // Use data\n});\n```\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "mocha test/test.js"
  },
  "version": "0.1.0"
}
