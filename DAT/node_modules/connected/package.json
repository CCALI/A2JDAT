{
  "_args": [
    [
      {
        "raw": "connected@https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
        "scope": null,
        "escapedName": "connected",
        "name": "connected",
        "rawSpec": "https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
        "spec": "https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
        "type": "remote"
      },
      "/Users/tobias/iit/azure/DAT/StandaloneDAT"
    ]
  ],
  "_from": "connected@>=0.0.0 <0.1.0",
  "_id": "connected@0.0.2",
  "_inCache": true,
  "_location": "/connected",
  "_phantomChildren": {},
  "_requested": {
    "raw": "connected@https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
    "scope": null,
    "escapedName": "connected",
    "name": "connected",
    "rawSpec": "https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
    "spec": "https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/create-server"
  ],
  "_resolved": "https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
  "_shasum": "7b5755b216ce31ffabccc38e9f4e1dfc1c3b7c6d",
  "_shrinkwrap": null,
  "_spec": "connected@https://registry.npmjs.org/connected/-/connected-0.0.2.tgz",
  "_where": "/Users/tobias/iit/azure/DAT/StandaloneDAT",
  "author": {
    "name": "Arnout Kazemier"
  },
  "bugs": {
    "url": "https://github.com/3rd-Eden/connected/issues"
  },
  "dependencies": {},
  "description": "Error first callback for listening on the server.",
  "devDependencies": {
    "assume": "0.0.x",
    "mocha": "1.20.x",
    "pre-commit": "0.0.x"
  },
  "homepage": "https://github.com/3rd-Eden/connected#readme",
  "keywords": [
    "connected",
    "connect",
    "listen",
    "listening",
    "error",
    "online",
    "up",
    "up",
    "and",
    "away"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "connected",
  "optionalDependencies": {},
  "readme": "# connected\n\nThis module is born out of an annoyance with the Node core. Every method that\nreceives a callback is called using an error first callback. But this is not the\ncase with servers. When you tell the server to start listening on the given port\nit can will `emit` an `error` event when it failed.\n\n## Installation\n\n```\nnpm install connected --save\n```\n\n## Usage\n\n```js\nvar connected = require('connected')\n  , http = require('http');\n\nvar app = http.createServer(function (req, res) {\n  res.end('wobble wobble');\n});\n\nconnected(app, 80, function (err) {\n  // Received an error because we are not allowed to listen on port 80\n});\n```\n\nAnd thats it.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/3rd-Eden/connected.git"
  },
  "scripts": {
    "test": "mocha $(find test -name '*.test.js')"
  },
  "version": "0.0.2"
}
